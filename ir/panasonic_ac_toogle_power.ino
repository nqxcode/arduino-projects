#include <IRremote.h>
#include <avr/pgmspace.h>

IRsend irsend;
int khz = 38;
const unsigned int signal_turn_on[] PROGMEM = {3536, 1716, 460, 408, 468, 1276, 468, 404, 464, 388, 484, 408, 468, 404, 464, 408, 464, 404, 468, 408, 464, 404, 468, 404, 468, 404, 468, 404, 468, 1276, 464, 408, 464, 408, 464, 408, 464, 380, 492, 404, 468, 384, 484, 408, 464, 1280, 468, 1276, 464, 1280, 464, 384, 488, 404, 468, 1256, 488, 380, 492, 380, 492, 404, 468, 380, 488, 408, 464, 408, 464, 408, 464, 384, 488, 408, 464, 384, 488, 404, 468, 404, 468, 404, 464, 408, 464, 408, 464, 408, 468, 404, 464, 384, 488, 408, 464, 408, 464, 404, 468, 404, 468, 404, 468, 404, 468, 404, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 1276, 468, 1256, 488, 404, 468, 404, 464, 408, 464, 408, 468, 404, 464, 10004, 3516, 1712, 464, 408, 464, 1280, 464, 408, 464, 404, 468, 404, 464, 408, 468, 404, 464, 408, 464, 408, 468, 404, 464, 408, 464, 408, 464, 408, 464, 1280, 464, 404, 468, 404, 468, 404, 468, 404, 468, 404, 464, 408, 464, 408, 464, 1280, 464, 1276, 468, 1276, 468, 404, 468, 404, 464, 1280, 464, 408, 464, 408, 464, 408, 464, 404, 468, 384, 488, 404, 468, 404, 468, 384, 488, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 1280, 464, 404, 468, 404, 468, 1276, 464, 408, 468, 1276, 464, 408, 464, 408, 464, 408, 464, 1280, 464, 404, 468, 404, 468, 1252, 492, 1276, 464, 408, 464, 408, 464, 408, 464, 384, 488, 408, 464, 404, 468, 404, 468, 404, 464, 408, 468, 1276, 464, 408, 464, 1280, 464, 408, 464, 408, 464, 404, 468, 1252, 492, 384, 488, 1276, 464, 408, 464, 1280, 464, 1280, 468, 404, 464, 404, 468, 404, 468, 404, 468, 404, 468, 404, 468, 404, 464, 384, 488, 408, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 468, 1276, 464, 1280, 464, 1280, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 464, 408, 468, 404, 464, 408, 468, 404, 464, 1280, 464, 1280, 464, 1280, 464, 404, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 412, 460, 408, 464, 408, 464, 404, 464, 408, 468, 404, 464, 408, 464, 408, 464, 1280, 468, 404, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 464, 1280, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 464, 1280, 464, 1280, 468, 1276, 464, 1280, 464, 1280, 464};
const unsigned int signal_turn_off[] PROGMEM = {3516, 1716, 464, 408, 464, 1280, 464, 404, 468, 404, 468, 404, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 468, 1276, 468, 404, 464, 408, 464, 408, 464, 408, 464, 392, 480, 408, 464, 408, 460, 1280, 468, 1276, 468, 1276, 464, 408, 464, 408, 464, 1280, 464, 404, 468, 404, 468, 404, 468, 404, 464, 408, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 468, 404, 472, 400, 468, 404, 464, 408, 468, 384, 484, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 468, 404, 464, 408, 464, 408, 468, 404, 464, 1260, 484, 1276, 468, 408, 464, 404, 468, 388, 484, 404, 468, 404, 464, 10004, 3516, 1712, 464, 408, 468, 1276, 464, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 468, 404, 464, 408, 468, 404, 464, 408, 464, 1280, 464, 408, 464, 408, 468, 404, 464, 388, 484, 388, 484, 408, 464, 404, 468, 1276, 464, 1280, 464, 1280, 464, 408, 464, 408, 464, 1276, 464, 408, 468, 404, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 404, 468, 388, 484, 388, 484, 384, 488, 404, 468, 404, 464, 1280, 464, 408, 464, 1280, 464, 408, 464, 408, 460, 408, 468, 1276, 468, 404, 464, 408, 464, 1260, 484, 1280, 464, 408, 460, 408, 468, 404, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 1280, 464, 408, 464, 1276, 468, 404, 464, 408, 464, 408, 464, 1280, 464, 408, 464, 1280, 464, 408, 464, 1276, 468, 1276, 468, 404, 468, 404, 464, 384, 488, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 460, 408, 468, 404, 464, 408, 464, 388, 484, 408, 464, 1280, 464, 1280, 464, 1260, 484, 408, 464, 404, 468, 404, 468, 404, 468, 404, 464, 408, 464, 408, 464, 408, 464, 388, 484, 1280, 464, 1276, 468, 1276, 464, 408, 464, 408, 464, 408, 464, 408, 464, 384, 488, 408, 464, 408, 464, 408, 464, 404, 468, 404, 464, 408, 464, 408, 468, 404, 464, 408, 464, 408, 468, 404, 464, 1280, 464, 408, 464, 408, 464, 404, 468, 404, 468, 404, 464, 408, 464, 1280, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 464, 408, 460, 408, 464, 408, 464, 408, 468, 404, 468, 404, 464, 408, 464, 388, 484, 408, 464, 408, 464, 408, 464, 1280, 464, 1276, 468, 1276, 468, 404, 464, 1280, 464, 1280, 464, 1280, 460, 1280, 468};

void setup()
{
  Serial.begin(9600);
}

void loop() {
  turnOn();
  delay(2000);
  turnOff();
  delay(2000);
}

void turnOn() {
  int size = sizeof(signal_turn_on) / sizeof(int);
  unsigned int buffer[size];

  for (int i = 0; i < size; i++) {
    buffer[i] = pgm_read_dword(&signal_turn_on[i]);
  }

  irsend.sendRaw(buffer, size, khz);
}

void turnOff() {
  int size = sizeof(signal_turn_off) / sizeof(int);
  unsigned int buffer[size];

  for (int i = 0; i < size; i++) {
    buffer[i] = pgm_read_dword(&signal_turn_off[i]);
  }

  irsend.sendRaw(buffer, size, khz);
}
